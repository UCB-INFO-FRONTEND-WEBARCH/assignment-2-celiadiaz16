{"ast":null,"code":"var _jsxFileName = \"/Users/celia/react-lab/src/components/Tags.js\";\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Tag({\n  tags,\n  updateTodo,\n  todo\n}) {\n  const addTag = e => {\n    console.log(e.target.value, e.key);\n\n    if (e.key === 'Enter') {\n      if (e.target.value.length > 0) {\n        updateTags([...tags, e.target.value]);\n        e.target.value = '';\n      }\n    }\n  };\n\n  const removeTag = removedTag => {\n    const newTags = tags.filter(tag => tag !== removedTag);\n    updateTags(newTags);\n  };\n\n  const updateTags = newTags => {\n    todo.tags = newTags;\n    updateTodo(todo);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tag-container\",\n    children: [tags.map((tag, index) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tag\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"fas fa-times\",\n            onClick: () => removeTag(tag),\n            children: \" \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 16\n          }, this), tag, \" ,\"]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Add a tag\",\n      onKeyDown: addTag\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_c = Tag;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tag\");","map":{"version":3,"sources":["/Users/celia/react-lab/src/components/Tags.js"],"names":["React","useState","Tag","tags","updateTodo","todo","addTag","e","console","log","target","value","key","length","updateTags","removeTag","removedTag","newTags","filter","tag","map","index"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,eAAe,SAASC,GAAT,CAAa;AAACC,EAAAA,IAAD;AAAOC,EAAAA,UAAP;AAAmBC,EAAAA;AAAnB,CAAb,EAAwC;AAErD,QAAMC,MAAM,GAAIC,CAAD,IAAO;AACpBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACG,MAAF,CAASC,KAArB,EAA4BJ,CAAC,CAACK,GAA9B;;AACA,QAAGL,CAAC,CAACK,GAAF,KAAU,OAAb,EAAqB;AACnB,UAAGL,CAAC,CAACG,MAAF,CAASC,KAAT,CAAeE,MAAf,GAAwB,CAA3B,EAA8B;AAC5BC,QAAAA,UAAU,CAAC,CAAC,GAAGX,IAAJ,EAAUI,CAAC,CAACG,MAAF,CAASC,KAAnB,CAAD,CAAV;AACAJ,QAAAA,CAAC,CAACG,MAAF,CAASC,KAAT,GAAgB,EAAhB;AACD;AACF;AACF,GARD;;AAUA,QAAMI,SAAS,GAAGC,UAAU,IAAI;AAC9B,UAAMC,OAAO,GAAGd,IAAI,CAACe,MAAL,CAAYC,GAAG,IAAIA,GAAG,KAAKH,UAA3B,CAAhB;AACAF,IAAAA,UAAU,CAACG,OAAD,CAAV;AACD,GAHD;;AAKA,QAAMH,UAAU,GAAIG,OAAD,IAAa;AAC9BZ,IAAAA,IAAI,CAACF,IAAL,GAAYc,OAAZ;AACAb,IAAAA,UAAU,CAACC,IAAD,CAAV;AACD,GAHD;;AAKA,sBAEE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA,eACGF,IAAI,CAACiB,GAAL,CAAS,CAACD,GAAD,EAAME,KAAN,KAAgB;AACxB,0BACE;AAAA,+BACE;AAAiB,UAAA,SAAS,EAAC,KAA3B;AAAA,kCACG;AAAM,YAAA,SAAS,EAAC,cAAhB;AAA+B,YAAA,OAAO,EAAI,MAAMN,SAAS,CAACI,GAAD,CAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADH,EAC4EA,GAD5E;AAAA,WAAUE,KAAV;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF;AAOD,KARA,CADH,eAUE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,WAAW,EAAC,WAA/B;AAA2C,MAAA,SAAS,EAAIf;AAAxD;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF;AAeD;KArCuBJ,G","sourcesContent":["import React, { useState } from 'react';\n\nexport default function Tag({tags, updateTodo, todo }) {\n\n  const addTag = (e) => {\n    console.log(e.target.value, e.key)\n    if(e.key === 'Enter'){\n      if(e.target.value.length > 0 ){\n        updateTags([...tags, e.target.value])\n        e.target.value =''\n      }\n    }\n  }\n\n  const removeTag = removedTag => {\n    const newTags = tags.filter(tag => tag !== removedTag)\n    updateTags(newTags);\n  }\n\n  const updateTags = (newTags) => {\n    todo.tags = newTags;\n    updateTodo(todo);\n  }\n\n  return (\n\n    <div className=\"tag-container\">\n      {tags.map((tag, index) => {\n        return (\n          <div>\n            <div key={index} className=\"tag\">\n               <span className=\"fas fa-times\" onClick = {() => removeTag(tag)}> </span>{tag} ,\n            </div>\n          </div>\n        );\n      })}\n      <input type=\"text\" placeholder=\"Add a tag\" onKeyDown = {addTag}/>\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}